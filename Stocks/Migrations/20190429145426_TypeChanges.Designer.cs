// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stocks.Data;

namespace Stocks.Migrations
{
    [DbContext(typeof(StocksDbContext))]
    [Migration("20190429145426_TypeChanges")]
    partial class TypeChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stocks.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Capacity");

                    b.Property<int?>("ItemStateId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ItemStateId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Stocks.Models.ItemState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Mass");

                    b.HasKey("Id");

                    b.ToTable("ItemStates");
                });

            modelBuilder.Entity("Stocks.Models.ItemStockHistory", b =>
                {
                    b.Property<int>("ItemId");

                    b.Property<int>("StockId");

                    b.Property<int>("ItemStateId");

                    b.Property<DateTime>("ArrivalDate");

                    b.HasKey("ItemId", "StockId", "ItemStateId");

                    b.HasIndex("ItemStateId")
                        .IsUnique();

                    b.HasIndex("StockId");

                    b.ToTable("ItemsStocksHistory");
                });

            modelBuilder.Entity("Stocks.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Capacity");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Stocks.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Stocks.Models.UserStock", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("StockId");

                    b.HasKey("UserId", "StockId");

                    b.HasIndex("StockId");

                    b.ToTable("UsersStocks");
                });

            modelBuilder.Entity("Stocks.Models.Item", b =>
                {
                    b.HasOne("Stocks.Models.ItemState", "ItemState")
                        .WithMany()
                        .HasForeignKey("ItemStateId");
                });

            modelBuilder.Entity("Stocks.Models.ItemStockHistory", b =>
                {
                    b.HasOne("Stocks.Models.Item", "Item")
                        .WithMany("ItemsStocksHistory")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Stocks.Models.ItemState", "ItemState")
                        .WithOne("ItemStockHistory")
                        .HasForeignKey("Stocks.Models.ItemStockHistory", "ItemStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Stocks.Models.Stock", "Stock")
                        .WithMany("ItemsStocksHistory")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Stocks.Models.UserStock", b =>
                {
                    b.HasOne("Stocks.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Stocks.Models.User", "User")
                        .WithMany("UsersStocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
